#!/usr/bin/env ruby
require 'ripper'
require 'fileutils'

help = <<TEXT
Usage: brew install-path [-h|--help] [-v|--version] [--cask|--formula] [--] <PATH>...

Options:
  -h, --help        Print this help
  -v, --version     Print version
  --cask            Treat all named arguments as casks.
  --formula         Treat all named arguments as formulas.
TEXT

treat_all_as_cask = false
treat_all_as_formula = false
paths = []
index = 0
while index < ARGV.size
  if ARGV[index] == '--'
    index += 1
    paths += ARGV[index..]
    break
  elsif ARGV[index] == '-h' || ARGV[index] == '--help'
    puts help
    exit
  elsif ARGV[index] == '-v' || ARGV[index] == '--version'
    puts "1.1.0"
    exit
  elsif ARGV[index] == '--cask'
    treat_all_as_cask = true
    index += 1
  elsif ARGV[index] == '--formula'
    treat_all_as_formula = true
    index += 1
  else
    paths += [ARGV[index]]
    index += 1
  end
end

if treat_all_as_formula && treat_all_as_cask
  STDERR.puts "--cask and --formula are conflicting options"
  exit 1
end

if paths.empty?
  STDERR.puts "Error: At least one PATH is required"
  STDERR.puts help
  exit 1
end

def is_cask(file_path)
  code = File.read(file_path)
  tokens = Ripper.lex(code)

  tokens.each do |(_, type, token, _)|
    # Skip comments, newlines, and whitespace
    if type == :on_comment || type == :on_sp || type == :on_ignored_nl || type == :on_embdoc_beg || type == :on_embdoc || type == :on_embdoc_end
      next
    end

    return token == 'cask'
  end

  return false
end

def copy_create_parent_dirs(src, dst)
  FileUtils.mkdir_p(File.dirname(dst))
  FileUtils.cp(src, dst)
end

def my_system(*args)
  ret = system(*args)
  exit $?.exitstatus unless $?.success?
  ret
end

$brew_prefix = `brew --prefix`.chomp

def install_cask(path, filename, package_name)
  copy_create_parent_dirs(path, "#{$brew_prefix}/Library/Taps/nikitabobko/homebrew-local-tap/Casks/#{filename}")
  my_system('brew', 'install', '--cask', "nikitabobko/local-tap/#{package_name}")
end

def install_formula(path, filename, package_name)
  copy_create_parent_dirs(path, "#{$brew_prefix}/Library/Taps/nikitabobko/homebrew-local-tap/Formula/#{filename}")
  my_system('brew', 'install', '--formula', "nikitabobko/local-tap/#{package_name}")
end

paths.each do |path|
  package_name = File.basename(path, '.rb')
  filename = File.basename(path)
  if treat_all_as_cask
    install_cask(path, filename, package_name)
  elsif treat_all_as_formula
    install_formula(path, filename, package_name)
  elsif is_cask(path)
    install_cask(path, filename, package_name)
  else
    install_formula(path, filename, package_name)
  end
end
